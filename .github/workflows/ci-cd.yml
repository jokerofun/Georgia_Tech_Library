# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master, Development]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build_and_scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            # Disabling shallow clone is recommended for improving relevancy of reporting for sonarcloud
            fetch-depth: 0

      - name: Start SQL Server
        run: |
          docker run -d -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Pass~w0r8' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:latest 
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: 5s

      - name: SonarScanner for .NET 6 with pull request decoration support
        uses: highbyte/sonarscan-dotnet@v2.1.2
        with:
            # The key of the SonarQube project
            sonarProjectKey: jokerofun_Georgia_Tech_Library
            # The name of the SonarQube project
            sonarProjectName:  Georgia_Tech_Library
            # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
            sonarOrganization: jokerofun-1
            # Optional command arguments to dotnet test
            dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
            # Optional extra command arguments the the SonarScanner 'begin' command
            sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"

        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Build_and_Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup .NET 6 Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Start SQL Server
        run: |
          docker run -d -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Pass~w0r8' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:latest 
      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: 5s
      - name: Restore dependencies
        run: dotnet restore
      - name: Build app
        run: dotnet build -c Release --no-restore
      - name: Run automated tests
        run: dotnet test -c Release --no-build