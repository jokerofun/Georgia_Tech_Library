/* tslint:disable */
/* eslint-disable */
/**
 * Georgia_Tech_Library_API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ItemDto,
} from '../models';

export interface ApiItemGetListBatchNumberGetRequest {
    batchNumber: number;
}

/**
 * ItemApi - interface
 * 
 * @export
 * @interface ItemApiInterface
 */
export interface ItemApiInterface {
    /**
     * 
     * @param {number} batchNumber 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ItemApiInterface
     */
    apiItemGetListBatchNumberGetRaw(requestParameters: ApiItemGetListBatchNumberGetRequest): Promise<runtime.ApiResponse<Array<ItemDto>>>;

    /**
     */
    apiItemGetListBatchNumberGet(requestParameters: ApiItemGetListBatchNumberGetRequest): Promise<Array<ItemDto>>;

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ItemApiInterface
     */
    apiItemGetListGetRaw(): Promise<runtime.ApiResponse<Array<ItemDto>>>;

    /**
     */
    apiItemGetListGet(): Promise<Array<ItemDto>>;

}

/**
 * 
 */
export class ItemApi extends runtime.BaseAPI implements ItemApiInterface {

    /**
     */
    async apiItemGetListBatchNumberGetRaw(requestParameters: ApiItemGetListBatchNumberGetRequest): Promise<runtime.ApiResponse<Array<ItemDto>>> {
        if (requestParameters.batchNumber === null || requestParameters.batchNumber === undefined) {
            throw new runtime.RequiredError('batchNumber','Required parameter requestParameters.batchNumber was null or undefined when calling apiItemGetListBatchNumberGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Item/GetList/{batchNumber}`.replace(`{${"batchNumber"}}`, encodeURIComponent(String(requestParameters.batchNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiItemGetListBatchNumberGet(requestParameters: ApiItemGetListBatchNumberGetRequest): Promise<Array<ItemDto>> {
        const response = await this.apiItemGetListBatchNumberGetRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async apiItemGetListGetRaw(): Promise<runtime.ApiResponse<Array<ItemDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Item/GetList`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiItemGetListGet(): Promise<Array<ItemDto>> {
        const response = await this.apiItemGetListGetRaw();
        return await response.value();
    }

}
