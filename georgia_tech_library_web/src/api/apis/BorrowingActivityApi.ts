/* tslint:disable */
/* eslint-disable */
/**
 * Georgia_Tech_Library_API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    BorrowingActivity,
    ProblemDetails,
} from '../models';

export interface ApiBorrowingActivityLoanItemPostRequest {
    sSN?: string;
    iSBN?: string;
    libraryName?: string;
}

/**
 * BorrowingActivityApi - interface
 * 
 * @export
 * @interface BorrowingActivityApiInterface
 */
export interface BorrowingActivityApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BorrowingActivityApiInterface
     */
    apiBorrowingActivityGetListGetRaw(): Promise<runtime.ApiResponse<Array<BorrowingActivity>>>;

    /**
     */
    apiBorrowingActivityGetListGet(): Promise<Array<BorrowingActivity>>;

    /**
     * 
     * @param {string} [sSN] 
     * @param {string} [iSBN] 
     * @param {string} [libraryName] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BorrowingActivityApiInterface
     */
    apiBorrowingActivityLoanItemPostRaw(requestParameters: ApiBorrowingActivityLoanItemPostRequest): Promise<runtime.ApiResponse<void>>;

    /**
     */
    apiBorrowingActivityLoanItemPost(requestParameters: ApiBorrowingActivityLoanItemPostRequest): Promise<void>;

}

/**
 * 
 */
export class BorrowingActivityApi extends runtime.BaseAPI implements BorrowingActivityApiInterface {

    /**
     */
    async apiBorrowingActivityGetListGetRaw(): Promise<runtime.ApiResponse<Array<BorrowingActivity>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/BorrowingActivity/GetList`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiBorrowingActivityGetListGet(): Promise<Array<BorrowingActivity>> {
        const response = await this.apiBorrowingActivityGetListGetRaw();
        return await response.value();
    }

    /**
     */
    async apiBorrowingActivityLoanItemPostRaw(requestParameters: ApiBorrowingActivityLoanItemPostRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.sSN !== undefined) {
            queryParameters['SSN'] = requestParameters.sSN;
        }

        if (requestParameters.iSBN !== undefined) {
            queryParameters['ISBN'] = requestParameters.iSBN;
        }

        if (requestParameters.libraryName !== undefined) {
            queryParameters['libraryName'] = requestParameters.libraryName;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/BorrowingActivity/LoanItem`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiBorrowingActivityLoanItemPost(requestParameters: ApiBorrowingActivityLoanItemPostRequest): Promise<void> {
        await this.apiBorrowingActivityLoanItemPostRaw(requestParameters);
    }

}
